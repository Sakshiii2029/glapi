static void *g_handle = 0;

GLAPI static void   *__glapiDefaultLoader(const char *name) { 
    void    *symbol;

#  if defined (__linux__)

    const char  *NAMES[] = {
        "libGL.so", "libGL.so.1", 0
    };

    /* Checking if handle is already loaded...
     * */
    if (!g_handle) {
        for (size_t i = 0; NAMES[i]; i++) {
            g_handle = dlopen(NAMES[i], RTLD_NOW | RTLD_GLOBAL);
            if (g_handle) {
                break;
            }
        }

        /* Null-check if dlopen fails for every NAME...
         * */
        if (!g_handle) {
            return (0);
        }
    }

    /* Now we can load a symbol...
     * */
    symbol = dlopen(g_handle, name);
    if (!symbol) {
        return (0);
    }

    return (symbol);

#  endif /* __linux__ */
#  if defined (_WIN32)

    /* NOTE(yakub):
     *  Here we're trusting microsoft that `HMODULE` is indeed `PVOID`.
     *  And PVOID is indeed `void *`.
     *  I'm giving a lot of trust in microsoft right now...
     * */

#  endif /* _WIN32 */

}
